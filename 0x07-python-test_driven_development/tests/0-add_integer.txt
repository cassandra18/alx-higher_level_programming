===========================
How to Use 0-add_integer.py
===========================

This module defines an integer addition function ``add_integer(a, b=98)``.


>>> add_integer = __import__('0-add_integer').add_integer

Addition of integers

>>> add_integer(4, 7)
11

Addition of a positive and a negative integer

>>> add_integer(-10, 99)
89

Addition of casted floats

>>> add_integer(20.0, 87.0)
107.0

>>> add_integer(3.8, 19.9)
22

Negative floats

>>> add_integer(-29.8, -0.2)
-29

Combined Floating and non-floating point values.

>>> add_integer(102.5, 4)
106

Optional value  b = 98

>>> add_integer(100)
198

Test cases with invalid inputs

>>> add_integer("a", 6)
Traceback (most recent call last):
TypeError: a must be an integer


>>> add_integer(66, "Cassandra")
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer(None)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(56, None)
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer("hello", "there")
Traceback (most recent call last):
TypeError: a must be an integer

Test case with infinity

>>> add_integer(float('inf'))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer

>>> add_integer(14.8, float('inf'))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer

Test case with NaN numbers.

>>> add_integer(float('nan'))
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer


>>> add_integer(12, float('nan'))
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer
