==============================
How to Use 2-matrix_divided.py
==============================

This module defines a matrix division function ``matrix_divided(matrix, div)``.
First import the function  to be tested ``matrix_divided`` from module ``2-matrix_divided``.

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test case with matrix with equal size and is a list of list.

>>> matrix = [
...     [12, 13, 14],
...     [9, 10, 8]
... ]
>>> print(matrix_divided(matrix, 10))
[[1.2, 1.3, 1.4], [0.9, 1, 0.8]]

>>> matrix = [
...     [99, 100, 19],
...     [12, 13, 14]
... ]
>>> print(matrix_divided(matrix, 10))
[[9.9, 10, 19], [1.2, 1.3, 1.4]]

The original matrix is left unchanged.

>>> print(matrix)
[[12, 13, 14], [12, 13, 14]]

Test case with floating-point numbers.

>>> matrix = [
...     [12, 13, 14],
...     [-12.9, -13.8, -14.6]
... ]
>>> print(matrix_divided(matrix, 10))
[[1.2, 1.3, 1.4], [-1.29, -1.38, -1.46]]

Combined integers and floats.

>>> matrix = [
...     [1.2, 13, -14.3],
...     [0, 3, 8.9]
... ]
>>> print(matrix_divided(matrix, 10))
[[0.12, 1.3, -1.43], [0, 0.3, 0.89]]

===========================
Test cases that raise an error
===========================

>>> matrix = "invalid"
>>> print(matrix_divided(matrix, 10))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = None
>>> print(matrix_divided(matrix, 10))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

Test case with an empty list.

>>> matrix = []
>>> print(matrix_divided(matrix, 10))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

Test case with an empty list of list

>>> matrix = [[]]
>>> print(matrix_divided(matrix, 10))
[[]]

Not a list of list.

>>> matrix = [12, 13, 14]
>>> print(matrix_divided(matrix, 10))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

Test with matrix that ontains a string.

>>> matrix = [
...     [12, 13, 14],
...     [4, "string", 6]
... ]
>>> print(matrix_divided(matrix, 10))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats


Test case with unequal lists.

>>> matrix = [
...     [12, 13, 14, 15],
...     [12.0, 13.8, -14]
... ]
>>> print(matrix_divided(matrix, 10))
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

===============
Invalid Divisors
================

Test case with a string diviser.

>>> matrix = [
...     [12, 13, 14],
...     [12, 13, 14]
... ]
>>> print(matrix_divided(matrix, "string"))
Traceback (most recent call last):
TypeError: div must be a number

>>> print(matrix_divided(matrix, None))
Traceback (most recent call last):
TypeError: div must be a number

Test case with zerodiviser

>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
ZeroDivisionError: division by zero
